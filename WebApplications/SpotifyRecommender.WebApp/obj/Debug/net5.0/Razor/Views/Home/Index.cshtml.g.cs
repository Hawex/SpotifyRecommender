#pragma checksum "C:\Users\Bartek\source\repos\SpotifyRecommender\WebApplications\SpotifyRecommender.WebApp\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "d5cc91a399145f604b9dfc47f7b1d94daaaad971"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Bartek\source\repos\SpotifyRecommender\WebApplications\SpotifyRecommender.WebApp\Views\_ViewImports.cshtml"
using SpotifyRecommender.WebApp;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Bartek\source\repos\SpotifyRecommender\WebApplications\SpotifyRecommender.WebApp\Views\_ViewImports.cshtml"
using SpotifyRecommender.WebApp.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d5cc91a399145f604b9dfc47f7b1d94daaaad971", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e79c614a6f1b91f0ddfedc729f9b59663cfe3d9b", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/multiselect-dropdown.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\Bartek\source\repos\SpotifyRecommender\WebApplications\SpotifyRecommender.WebApp\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<div class=\"text-center\">\r\n    <h3>Select user:</h3>\r\n    <select style=\"width:200px;\" name=\"usersList\" id=\"usersList\" onchange=\"selectedUserChanged(this.selectedOptions)\">\r\n");
#nullable restore
#line 8 "C:\Users\Bartek\source\repos\SpotifyRecommender\WebApplications\SpotifyRecommender.WebApp\Views\Home\Index.cshtml"
         foreach (var user in (IEnumerable<UserModel>)ViewBag.Users)
        {

#line default
#line hidden
#nullable disable
            WriteLiteral("            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d5cc91a399145f604b9dfc47f7b1d94daaaad9714467", async() => {
#nullable restore
#line 10 "C:\Users\Bartek\source\repos\SpotifyRecommender\WebApplications\SpotifyRecommender.WebApp\Views\Home\Index.cshtml"
                                Write(user.Login);

#line default
#line hidden
#nullable disable
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            BeginWriteTagHelperAttribute();
#nullable restore
#line 10 "C:\Users\Bartek\source\repos\SpotifyRecommender\WebApplications\SpotifyRecommender.WebApp\Views\Home\Index.cshtml"
               WriteLiteral(user.Id);

#line default
#line hidden
#nullable disable
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = __tagHelperStringValueBuffer;
            __tagHelperExecutionContext.AddTagHelperAttribute("value", __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
#nullable restore
#line 11 "C:\Users\Bartek\source\repos\SpotifyRecommender\WebApplications\SpotifyRecommender.WebApp\Views\Home\Index.cshtml"
        }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"    </select>
    <br />
    <br />
    <h3>
        Select genres that you like:
    </h3>
    <select style=""width:200px;"" name=""genresList"" id=""genresList"" multiple multiselect-search=""true"" multiselect-select-all=""true"" multiselect-max-items=""3"" onchange=""selectedGenresChanged(this.selectedOptions)"">
");
#nullable restore
#line 19 "C:\Users\Bartek\source\repos\SpotifyRecommender\WebApplications\SpotifyRecommender.WebApp\Views\Home\Index.cshtml"
         foreach (var genre in (List<string>)ViewBag.Genres)
        {

#line default
#line hidden
#nullable disable
            WriteLiteral("            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d5cc91a399145f604b9dfc47f7b1d94daaaad9717183", async() => {
#nullable restore
#line 21 "C:\Users\Bartek\source\repos\SpotifyRecommender\WebApplications\SpotifyRecommender.WebApp\Views\Home\Index.cshtml"
               Write(genre);

#line default
#line hidden
#nullable disable
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
#nullable restore
#line 22 "C:\Users\Bartek\source\repos\SpotifyRecommender\WebApplications\SpotifyRecommender.WebApp\Views\Home\Index.cshtml"
        }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"    </select>
    <br />
    <br />

    <h3>
        Select tracks that you like:
    </h3>
    <br />
    <label>Enter track name to search: </label>
    <input type=""text"" id=""trackName"" />
    <button onclick=""searchForTracks()"">Search</button>
    <br />

    <select style=""width:200px;"" name=""tracksList"" id=""tracksList"">
    </select>

    <button onclick=""addTrackToFavourites()"">Add to favourites</button>
    <br />
    <label>Selected tracks:</label>
    <div id=""selectedTracks""></div>
    <br />
    <br />
    <h3>
        Select artists that you like:
    </h3>
    <br />
    <label>Enter artist name to search: </label>
    <input type=""text"" id=""artistName"" />
    <button onclick=""searchForArtists()"">Search</button>
    <br />

    <select style=""width:200px;"" name=""artistsList"" id=""artistsList"">
    </select>

    <button onclick=""addArtistToFavourites()"">Add to favourites</button>
    <br />
    <label>Selected artists:</label>
    <div id=""selectedArtists""></");
            WriteLiteral("div>\r\n    <br />\r\n    <br />\r\n    <button onclick=\"saveUserRecommendations()\">Save user preferences.</button>\r\n\r\n</div>\r\n\r\n\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d5cc91a399145f604b9dfc47f7b1d94daaaad9719891", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
    <script>

        function saveUserRecommendations()
        {
            if (!selectedUserId) {
                var usersList = document.getElementById(""usersList"");
                selectedUserId = usersList[usersList.selectedIndex].value;
            }
            var userWithRecommendationBuildModel = {};
            userWithRecommendationBuildModel.userid = selectedUserId;
            userWithRecommendationBuildModel.genres = selectedGenres;
            userWithRecommendationBuildModel.trackids = favouriteTracks;
            userWithRecommendationBuildModel.artistsids =favouriteArtists;
            $.ajax(
                {
                    type: ""POST"",
                    url: '");
#nullable restore
#line 86 "C:\Users\Bartek\source\repos\SpotifyRecommender\WebApplications\SpotifyRecommender.WebApp\Views\Home\Index.cshtml"
                     Write(Url.Action("SaveUserRecommendations", "Home"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                    dataType: 'json',
                    contentType: 'application/json',
                    data: JSON.stringify(userWithRecommendationBuildModel),
                    success: function (result) {
                        if (result) {
                            alert(""Successfully added recommendations for user."");
                        }
                        else {
                            alert(""Can't add recommendations for user."");
                        }
                    },
                    error: function(err)
                    {
                        alert(""Can't add recommendations for user. Check console."");
                        console.log(err);
                }

                })
        }

        var selectedUserId;
        function selectedUserChanged(userId) {
            selectedUserChanged = userId;
        }

        var selectedGenres = [];
        function selectedGenresChanged(selectedOptions) {
            select");
                WriteLiteral(@"edGenres = [];
            for (var i = 0; i < selectedOptions.length; i++) {
                selectedGenres.push(selectedOptions[i].value)
            }
        }

        function searchForTracks() {
            $.ajax(
                {
                    type: ""GET"",
                    url: '");
#nullable restore
#line 124 "C:\Users\Bartek\source\repos\SpotifyRecommender\WebApplications\SpotifyRecommender.WebApp\Views\Home\Index.cshtml"
                     Write(Url.Action("GetTracks", "Home"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                    data: { name: document.getElementById(""trackName"").value },
                    success: function (result) {
                        clearTracksList();
                        result.forEach(x => addNewTrackToList(x));
                    },
                    error: function(err)
                    {
                        console.log(err);
                }

                })
        }

        function addNewTrackToList(track) {
            var select = document.getElementById(""tracksList"");
            var opt = document.createElement('option');
            opt.value = track.id;
            opt.innerHTML = track.artistName + '-' + track.trackName;
            select.appendChild(opt);
        }

        function clearTracksList() {
            var select = document.getElementById(""tracksList"");
            var length = select.options.length;
            for (i = length - 1; i >= 0; i--) {
                select.options[i] = null;
            }
        ");
                WriteLiteral(@"}
        var favouriteTracks = [];
        var favouriteTracksNames = [];
        function addTrackToFavourites() {
            var trackList = document.getElementById(""tracksList"");
            var value = trackList.value
            if (value) {
                if (!favouriteTracks.includes(value)) {
                    favouriteTracks.push(value);
                    favouriteTracksNames.push(trackList[trackList.selectedIndex].text);
                    document.getElementById(""selectedTracks"").textContent = favouriteTracksNames.toString();

                }
            }


        }
        function searchForArtists() {
            $.ajax(
                {
                    type: ""GET"",
                    url: '");
#nullable restore
#line 173 "C:\Users\Bartek\source\repos\SpotifyRecommender\WebApplications\SpotifyRecommender.WebApp\Views\Home\Index.cshtml"
                     Write(Url.Action("GetArtists", "Home"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                    data: { name: document.getElementById(""artistName"").value },
                    success: function (result) {
                        clearArtistsList();
                        result.forEach(x => addNewArtistToList(x));
                    },
                    error: function(err)
                    {
                        console.log(err);
                }

                })
        }

        function addNewArtistToList(artist) {
            var select = document.getElementById(""artistsList"");
            var opt = document.createElement('option');
            opt.value = artist.id;
            opt.innerHTML = artist.name;
            select.appendChild(opt);
        }

        function clearArtistsList() {
            var select = document.getElementById(""artistsList"");
            var length = select.options.length;
            for (i = length - 1; i >= 0; i--) {
                select.options[i] = null;
            }
        }
        var favou");
                WriteLiteral(@"riteArtists = [];
        var favouriteArtistsNames = [];
        function addArtistToFavourites() {
            var artistsList = document.getElementById(""artistsList"");
            var value = artistsList.value
            if (value) {
                if (!favouriteArtists.includes(value)) {
                    favouriteArtists.push(value);
                    favouriteArtistsNames.push(artistsList[artistsList.selectedIndex].text);
                    document.getElementById(""selectedArtists"").textContent = favouriteArtistsNames.toString();

                }
            }


        }
    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
